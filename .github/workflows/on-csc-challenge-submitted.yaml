name: On Challenge Submitted

on:
  issues:
     types:
     - opened
  workflow_dispatch:
    inputs:
      issue-number:
        description: 'Issue number'
        required: true

permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write

jobs:
  verification-start:
    name: 'Starting verification'

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get GitHub access token
      id: github-connect
      shell: pwsh
      run: |
        $token = ./gha-scripts/Get-GitHubAccessToken.ps1 `
          -AccessTokenIDs "${{ vars.ACCESS_TOKEN_IDS }}" `
          -ApimBaseUrl "${{ vars.APIM_BASE_URL }}" `
          -ApimApiKey "${{ secrets.APIM_SUBSCRIPTION_KEY }}"

        echo "::add-mask::$token"
        echo "token=$token" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8

    # - name: Check event payload
    #   shell: pwsh
    #   run: |
    #     $eventPayload = '${{ toJson(github) }}'

    - name: Check issue details
      id: issue
      shell: pwsh
      env:
        GH_TOKEN: ${{ steps.github-connect.outputs.token }}
      run: |
        $payload = '${{ toJson(github) }}'
        $result = $(./gha-scripts/Csc-CheckIssue.ps1 `
          -IssueNumber "${{ github.event.inputs.issue-number }}" `
          -GitHubPayload $($payload | ConvertFrom-Json)) | ConvertFrom-Json

        echo "number=$($result.IssueNumber)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "title=$($result.title)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "body=$($result.body)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "create_at=$($result.create_at)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "githubID=$($result.githubID)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "assignee=$($result.assignee)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
  
    # - name: Debug challenge code
    #   shell: pwsh
    #   run: |
    #     echo "code: ${{ steps.challenge.outputs.code }}"
    #     echo "codeUpper: ${{ steps.challenge.outputs.codeUpper }}"
    #     echo "isValidCode: ${{ steps.challenge.outputs.isValidCode }}"
        
    - name: Check issue date/time
      id: checkpoint
      shell: pwsh
      run: |
        $result = $(./gha-scripts/Csc-Check-Issue-DateTime.ps1 -dateSubmittedInput "${{ steps.issue.outputs.created_at }}" -dateDueInput "${{ vars.CSC_DUE_DATE }}") | ConvertFrom-Json

        echo "dateSubmittedValue=$($result.dateSubmittedValue)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "dateDueValue=$($result.dateDueValue)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "isOverdue=$($result.isOverdue)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

    - name: Check issue type
      id: issue-type
      shell: pwsh
      run: |

        $result = $(./gha-scripts/Csc-Check-IssueType.ps1 -eventtitle "${{ steps.issue.outputs.title }}") | ConvertFrom-Json

        echo "isCsc=$($result.isCsc)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "isTeamTopic=$($result.isTeamTopic)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "isTeamApp=$($result.isTeamApp)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "isTeamPitch=$($result.isTemaPitch)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

    - name: Check challenge code
      if: steps.issue-type.outputs.isCsc == 'true'
      id: challenge
      shell: pwsh
      run: |
        $payload = '${{ toJson(github) }}'
        $result = $(./gha-scripts/Check-ChallengeCode.ps1 `
        -IssueNumber "${{ github.event.inputs.issue-number }}" `
        -GitHubPayload $($payload | ConvertFrom-Json)) | ConvertFrom-Json

        echo "code=$code" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "codeUpper=$codeUpper" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append
        echo "isValidCode=$isValidCode" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

    - name: Extract Microsoft Learn profile link
      if: steps.issue-type.outputs.isCsc == 'true'
      id: profile
      shell: pwsh
      run: |
        $link = ./gha-scripts/Csc-Extract-LearnProfile.ps1 -body "${{ steps.issue.outputs.body }}"

        echo "Profilelink=$link" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

    - name: Add a label - Overdue
      if: steps.issue-type.outputs.isCsc == 'true' && steps.checkpoint.outputs.isOverdue == 'true'
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue edit ${{ steps.issue.outputs.number }} \
          --add-label "overdue" \
          -R ${{ github.event.repository.full_name }}

    - name: Comment to issue - Overdue
      if: steps.issue-type.outputs.isCsc == 'true' && steps.checkpoint.outputs.isOverdue == 'true'
      uses: actions-cool/issues-helper@v3
      with:
        actions: 'create-comment'
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ steps.issue.outputs.number }}
        body: |
          👋🏼 @${{ steps.issue.outputs.githubId }} 님!

          * 이슈 제출 시각: ${{ steps.checkpoint.outputs.dateSubmitted }}
          * 이슈 마감 시각: ${{ steps.checkpoint.outputs.dateDue }}

          안타깝게도 제출하신 이슈는 마감 기한인 ${{ steps.checkpoint.outputs.dateDue }}을 넘기셨습니다. 😭 따라서, 이번 클라우드 스킬 챌린지 이벤트에 반영되지 않습니다.

          그동안 클라우드 스킬 챌린지 이벤트에 참여해 주셔서 감사 드립니다. 하지만 우리는 해커톤이 있잖아요? 거기서 다시 만나요!

    - name: Close issue - Overdue
      if: steps.issue-type.outputs.isCsc == 'true' && steps.checkpoint.outputs.isOverdue == 'true'
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue close ${{ steps.issue.outputs.number }} \
          -c "챌린지 제출 기한이 종료되었습니다. 이슈를 닫습니다." \
          -R ${{ github.event.repository.full_name }}

    - name: Add a label - Invalid challenge code
      if: steps.issue-type.outputs.isCsc == 'true' && steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'false'
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue edit ${{ steps.issue.outputs.number }} \
          --add-label "invalid" \
          -R ${{ github.event.repository.full_name }}
  
    - name: Comment to issue - Invalid challenge code
      if: steps.issue-type.outputs.isCsc == 'true' && steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'false'
      uses: actions-cool/issues-helper@v3
      with:
        actions: 'create-comment'
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ steps.issue.outputs.number }}
        body: |
          👋🏼 @${{ steps.issue.outputs.githubId }} 님!

          * 제출 챌린지 코드: `${{ steps.challenge.outputs.codeUpper }}`
          * 예상 챌린지 코드: `AZ-900`, `AI-900`, `DP-900`, `PL-900`, `SC-900`, `MS-900`

          안타깝게도 제출하신 이슈는 정확한 챌린지 코드가 제목에 포함되어 있지 않아 확인을 할 수가 없습니다. 😱 챌린지 코드는 위에 언급한 여섯 가지 중 하나여야 합니다.

          이 이슈는 자동으로 닫힐 예정이니, 새롭게 이슈를 생성해 주시기 바랍니다.
  
    - name: Close issue - Invalid challenge code
      if: steps.issue-type.outputs.isCsc == 'true' && steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'false'
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue close ${{ steps.issue.outputs.number }} \
          -c "챌린지 코드를 확인할 수 없습니다. 이슈를 닫습니다." \
          -R ${{ github.event.repository.full_name }}
  
    - name: Add a label - Acknowledge
      if: steps.issue-type.outputs.isCsc == 'true' && steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'true'
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh issue edit ${{ steps.issue.outputs.number }} \
          --add-label "csc,${{ steps.challenge.outputs.code }},verifying" \
          -R ${{ github.event.repository.full_name }}

    - name: Get random assignee
      if: steps.issue-type.outputs.isCsc == 'true' && steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'true' && steps.issue.outputs.assignee == ''
      id: assignee
      shell: pwsh
      run: |
        $assignee = ./gha-scripts/Csc-Get-RandomAssignee.ps1 -Assignees "${{ vars.INSPECTORS }}"

        echo "githubId=$assignee" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf-8 -Append

    - name: Assign an inspector
      if: steps.issue-type.outputs.isCsc == 'true' && steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'true' && steps.issue.outputs.assignee == ''
      uses: actions-cool/issues-helper@v3
      with:
        actions: 'add-assignees'
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ steps.issue.outputs.number }}
        assignees: ${{ steps.assignee.outputs.githubId }}

    - name: Comment to issue - Acknowledge
      if: steps.issue-type.outputs.isCsc == 'true' && steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'true'
      uses: actions-cool/issues-helper@v3
      with:
        actions: 'create-comment'
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ steps.issue.outputs.number }}
        emoji: '+1,rocket'
        body: |
          👋🏼 @${{ steps.issue.outputs.githubId }} 님!

          ${{ steps.challenge.outputs.codeUpper }} 챌린지 완료 이슈를 생성해 주셔서 감사합니다! 🎉 참가자님의 해커톤 완주를 응원해요! 💪🏼

          @${{ steps.assignee.outputs.githubId }} 님께서 최대한 빠르게 확인해 드리겠습니다! 😊

          🔹 해커그라운드 운영진 일동 🔹

    - name: Call Power Automate workflow
      if: steps.issue-type.outputs.isCsc == 'true' && steps.checkpoint.outputs.isOverdue == 'false' && steps.challenge.outputs.isValidCode == 'true'
      id: request
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ secrets.PAU_ON_CHALLENGE_SUBMITTED_URL }}
        method: 'POST'
        data: '{ "githubId": "${{ steps.issue.outputs.githubId }}", "msLearnProfileLink": "${{ steps.profile.outputs.link }}", "challengeCode": "${{ steps.challenge.outputs.codeUpper }}" }'
